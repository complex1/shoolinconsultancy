'use client';

import React, { useState } from 'react';
import { Dialog } from '@headlessui/react';
import Calendar from 'react-calendar';
import Image from 'next/image';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { 
  faTimes, 
  faCalendarAlt, 
  faChevronLeft, 
  faChevronRight,
  faUser,
  faEnvelope,
  faPhone,
  faCheck,
  faClock
} from '@fortawesome/free-solid-svg-icons';
import 'react-calendar/dist/Calendar.css';

interface Attorney {
  id?: number;
  name: string;
  title: string;
  role: string;
  specialization: string;
  image?: string;
  availability?: Array<{
    date: string;
    time: string;
  }>;
}

interface ConsultationModalProps {
  isOpen: boolean;
  onClose: () => void;
  attorney?: Attorney;
}

const ConsultationModal: React.FC<ConsultationModalProps> = ({ isOpen, onClose, attorney }) => {
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    message: '',
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    // TODO: Implement form submission
    console.log('Form submitted:', { ...formData, selectedDate });
    onClose();
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  return (
    <Dialog open={isOpen} onClose={onClose} className="relative z-50">
      <div className="fixed inset-0 bg-black/30" aria-hidden="true" />
      
      <div className="fixed inset-0 flex items-center justify-center p-4">
        <Dialog.Panel className="mx-auto max-w-4xl rounded bg-white p-6 shadow-xl">
          <Dialog.Title className="text-2xl font-bold mb-4 text-primary-main">
            Schedule a Consultation
            {attorney && ` with ${attorney.name}`}
          </Dialog.Title>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <h3 className="text-lg font-semibold text-primary-main">Select a Date</h3>
              <Calendar
                onChange={(value) => {
                  if (value instanceof Date) {
                    setSelectedDate(value);
                  }
                }}
                value={selectedDate}
                className="rounded-lg border shadow"
                minDate={new Date()}
              />
              {attorney && (
                <div className="mt-4 p-4 bg-neutral-50 rounded-lg">
                  <h4 className="font-medium text-primary-main">{attorney.name}</h4>
                  <p className="text-sm text-neutral-600">{attorney.specialization}</p>
                  <p className="text-sm text-neutral-600">{attorney.role}</p>
                </div>
              )}
            </div>

            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label htmlFor="name" className="block text-sm font-medium text-primary-main mb-1">
                  Full Name <span className="text-accent-error">*</span>
                </label>
                <div className="relative">
                  <span className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500">
                    <FontAwesomeIcon icon={faUser} className="w-4 h-4" />
                  </span>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    value={formData.name}
                    onChange={handleChange}
                    className="w-full pl-10 pr-4 py-3 bg-white border border-neutral-300 rounded-lg focus:outline-none focus:border-secondary-main focus:ring-1 focus:ring-secondary-light"
                    placeholder="Your full name"
                    required
                  />
                </div>
              </div>

              <div>
                <label htmlFor="email" className="block text-sm font-medium text-primary-main mb-1">
                  Email <span className="text-accent-error">*</span>
                </label>
                <div className="relative">
                  <span className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500">
                    <FontAwesomeIcon icon={faEnvelope} className="w-4 h-4" />
                  </span>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                    className="w-full pl-10 pr-4 py-3 bg-white border border-neutral-300 rounded-lg focus:outline-none focus:border-secondary-main focus:ring-1 focus:ring-secondary-light"
                    placeholder="Your email address"
                    required
                  />
                </div>
              </div>

              <div>
                <label htmlFor="phone" className="block text-sm font-medium text-primary-main mb-1">
                  Phone <span className="text-accent-error">*</span>
                </label>
                <div className="relative">
                  <span className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500">
                    <FontAwesomeIcon icon={faPhone} className="w-4 h-4" />
                  </span>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    className="w-full pl-10 pr-4 py-3 bg-white border border-neutral-300 rounded-lg focus:outline-none focus:border-secondary-main focus:ring-1 focus:ring-secondary-light"
                    placeholder="Your phone number"
                    required
                  />
                </div>
              </div>

              <div>
                <label htmlFor="message" className="block text-sm font-medium text-primary-main mb-1">
                  Message
                </label>
                <textarea
                  id="message"
                  name="message"
                  value={formData.message}
                  onChange={handleChange}
                  rows={4}
                  className="w-full px-4 py-3 bg-white border border-neutral-300 rounded-lg focus:outline-none focus:border-secondary-main focus:ring-1 focus:ring-secondary-light"
                  placeholder="Tell us about your case"
                />
              </div>

              <div className="flex justify-end space-x-3 pt-4">
                <button
                  type="button"
                  onClick={onClose}
                  className="px-4 py-2 rounded bg-neutral-200 hover:bg-neutral-300 transition-colors"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  className="px-4 py-2 rounded bg-secondary-main text-white hover:bg-secondary-dark transition-colors"
                >
                  Schedule Consultation
                </button>
              </div>
            </form>
          </div>
        </Dialog.Panel>
      </div>
    </Dialog>
  );
};

export default ConsultationModal;
